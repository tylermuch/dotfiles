[alias]
    # Stash untracked files too
    sta = stash --all
    # Track change through line and file movement
    bla = blame -w -C -C -C
    # word diff
    wdiff = diff --word-diff
    s = status
    cp = cherry-pick
    ours = "!f() { git co --ours $@ && git add %@; }; f"
    theirs = "!f() { git co --theirs %@ && git add %@; }; f"
    up = "!git pull; git submodule update"
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr, %cn)%Creset' --abbrev-commit --date=relative
    oldest-ancestor = !zsh -c 'diff -u <(git rev-list --first-parent \"${1:-main}\") <(git rev-list --first-parent \"${2:-HEAD}\") | sed -ne \"s/^ //p\" | head -1' -
    b = "!r() { refbranch=$1 count=$2; git for-each-ref --sort=-committerdate refs/heads --format='%(refname:short)|%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' --color=always --count=${count:-20} | while read line; do branch=$(echo \"$line\" | awk 'BEGIN { FS = \"|\" }; { print $1 }' | tr -d '*'); ahead=$(git rev-list --count \"${refbranch:-origin/main}..${branch}\"); behind=$(git rev-list --count \"${branch}..${refbranch:-origin/main}\"); colorline=$(echo \"$line\" | sed 's/^[^|]*|//'); echo \"$ahead|$behind|$colorline\" | awk -F'|' -vOFS='|' '{$5=substr($5,1,70)}1' ; done | ( echo \"ahead|behind|branch|lastcommit|message|author\n\" && cat) | column -ts'|';}; r"
[push]
    default = simple
[branch]
    autoSetupMerge = always
    autoSetupRebase = always
    sort = -committerdate
[core]
	excludesfile = /Users/tmuch/.gitignore_global
	autocrlf = input
[init]
	defaultBranch = main

# REuse REcorded REsolution
# Remember merge conflict resolutions and automatically fix when seen again
# Useful when rebasing so don't have to fix the same thing over and over
[rerere]
	enabled = true

# For work-related and other private configuration.
# For example, .gitconfig.private can contain the following (note the trailing slash):
# [includeIf "gitdir:~/private_src/"]
#   path = ~/.gitconfig.private.internal
#
#
# and .gitconfig.private.internal can have any configuration that
# you want only to apply to repos in ~/private_src
[include]
  path = ~/.gitconfig.private
